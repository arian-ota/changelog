====================
     2022-04-22    
====================
* device/xiaomi/msm8998-common
9ffec9ff0 msm8998-common: doze: Treat ProximitySensor values as int [Arian]
b05eb8777 msm8998-common: Patch camera HAL for Q bringup [Bruno Martins]
536ddae2d Revert "msm8998-common: sepolicy: Allow hal_camera_default to read bootanim_system_prop" [Arian]
00a18f30d msm8998-common: sepolicy: Add contexts for exported telephony props [Inseob Kim]
4df875d4f msm8998-common: properties: Use threaded GLES render engine [Kyle Harrison]
e8884c75d msm8998-common: properties: Disable SDM Scalar [clarencelol]
d3de143f2 msm8998-common: properties: Remove obsolete debug.sf.disable_backpressure [SamarV-121]
e116eb17b msm8998-common: properties: don't latch unsignal buffers [Midas Chien]
881afa9a8 msm8998-common: Remove activity_recognition libs [Jeferson]
6c8384e15 msm8998-common: Drop QTI datastatusnotification [daniml3]
109461f5d msm8998-common: qcril: fix MT SMS sent during power off [Tim Lin]
c2ba7f614 mms8998-common: Squashed removal of TetheringOverlay [Nolen Johnson]
19f7c0827 msm8998-common: Patch libminikin-v28.so to load libicuuc-v28.so [Arian]
93e947005 msm8998-common: vndk: Enable runtime isolation [Arian]

* packages/apps/LineageParts
0700955 LineageParts: switch to 3-button navigation when disabling navbar [Timi RautamÃ¤ki]

* system/core
a8e1e24fa Add wrapped key support [dianlujitao]

* system/vold
1a82fea Revert "system: vold: Upgrade the FBE key" [Arian]
bb726f0 vold: Bring in more wrapped key changes [Pig]
1aacace system: vold: Upgrade the FBE key [Neeraj Soni]
8cb2506 vold: Enable legacy support for wrapped key [Neeraj Soni]
de9cb35 system: vold: Use wrapped key for metadata encryption [Neeraj Soni]

* tools/buildscript
3fc29f5 drop set -e [Arian]
43271b8 Move to github releases [Arian]
646be21 Exit if a command fails [Arian]
dc2c278 rename upload to upload_sourceforge [Arian]
7cd4dda simplify lineage prefixed variable names [Arian]

====================
     2022-04-21    
====================
* device/xiaomi/davinci
91bd98c davinci: overlay: Remove obsolete fps location config [Alexander Koskovich]

* device/xiaomi/msm8998-common
cc5ac6c3c msm8998-common: sepolicy: Allow hal_camera_default to read bootanim_system_prop [Nolen Johnson]
88f5ff5ee msm8998-common: Move dpm system property to system_prop.mk [Arian]
75de8ce1e msm8998-common: Move DPM property to system [Nolen Johnson]
ffb828a5c msm8998-common: Drop support for Snapdragon Camera [Alexander Koskovich]
f59d93da2 msm8998-common: Remove CLANG compile flag [Georg Veichtlbauer]
1fe3f1977 msm8998-common: Uprev manifests/FCM level [Nolen Johnson]
c34793677 msm8998-common: Move libui_shim to system_ext and align with libgui_shim [Arian]
26390d7a8 msm8998-common: Move libgui_shim to ims dir [Arian]
24c4058b4 msm8998-common: libshims: Add shim for camera blobs [Erfan Abdi]
884c7369f msm8998-common: Unbreak peripheral manager [Bruno Martins]
564dcb323 msm8998-common: Remove leading dash from remaining apks [Arian]
31ef32e9c msm8998-common: Automatically add apk/jar/vintf fragments to PRODUCT_PACKAGES [Michael Bestas]
90dfa12a7 msm8998-common: Copy cgroups and task_profiles directly from system/core [Bruno Martins]
4c96077e6 msm8998-common: Ship cgroups.json and task_profiles.json in vendor [Chenyang Zhong]
15de6c8c0 msm8998-common: Modify Vulkan and OpenGL version to 2020-03-01 [linjoey]
1ff94b0af msm8998-common: Add OpenGL ES and update Vulkan dEQP feature flags [Alastair Donaldson]
1173784bf msm8998-common: Set manufacturer and soc properties [sudharani]
d2d152dd0 msm8998-common: Remove odex/oat files from pinner list [Nicolas Geoffray]
c126a75e8 msm8998-common: Update SurfaceFlinger pin on all targets [Kevin Jeon]
48fe62c29 msm8998-common: Drop unnecessary HIDL libs from vendor [Arian]

* device/xiaomi/sagit
aa8b06b5 sagit: overlay: Set physical power button and fps location [Bruno Martins]
dfb93c6c sagit: overlay: Remove obsolete fps location config [Alexander Koskovich]

* kernel/xiaomi/msm8998
f4d429ae82f1 {chiron,sagit}_defconfig: enable CONFIG_CRYPTO_SHA512 and savedefconfig [Lorenzo Colitti]
7384a7ddfc28 {chiron,sagit}_defconfig: Enable eBPF [ivanmeler]
ffe3466ae84d Merge remote-tracking branch 'msm8998/lineage-19.1' into lineage-19.1 [Michael Bestas]
56500d8b2ae3 Merge remote-tracking branch 'msm8998/lineage-18.1' into lineage-18.1 [Michael Bestas]

* lineage/mirror
ed669e6 Updated aosp-minimal to 21-Apr-2022 12:01 UTC [Tim Schumacher]

* tools/buildscript
cf886a3 Pass gms argument from upload to release [Arian]

* vendor/xiaomi
7afd7332 msm8998-common: Patch camera HAL for Q bringup [Bruno Martins]
9a9b425e msm8998-common: Remove activity_recognition libs [Jeferson]
714e3bf9 msm8998-common: Drop QTI datastatusnotification [daniml3]
93a9a9f0 msm8998-common: Patch libminikin-v28.so to load libicuuc-v28.so [Arian]

====================
     2022-04-20    
====================
* device/xiaomi/msm8998-common
759d54fe0 msm8998-common: Build needed HIDL libs into vendor [LuK1337]
6ae51a232 msm8998-common: Disable APEX compression [LuK1337]
5dbc4f4c5 msm8998-common: clearkey plugin to drm HAL v1.4 [Edwin Wong]
8ff1b0726 msm8998-common: sepolicy: Attach vendor_property_type to properties [Inseob Kim]
aeb42a045 msm8998-common: doze: Adapt to S style [TheScarastic]
27be3c520 msm8998-common: Allow ELF prebuilts in PRODUCT_COPY_FILES. [Roger Ellis]
2b899ed8f msm8998-common: RIP com.dsi.ant.antradio_library [LuK1337]
f20c1ce6a msm8998-common: Use PRODUCT_*_SEPOLICY_DIRS to build product sepolicy [Tri Vo]

* device/xiaomi/sm6150-common
ef38d89 sm6150-common: Remove odex/oat files from pinner list [Nicolas Geoffray]
cb96f74 sm6150-common: Update SurfaceFlinger pin on all targets [Kevin Jeon]
b01b18c sm6150-common: Drop renderscript pin [Arian]

* frameworks/base
af01fc24bb52 SystemUI: Split status bar icon controls for vibrate and mute [althafvly]

* packages/apps/Recorder
f90745b Recorder: do not set top system inset to list padding [2bllw8]
abba63c Material you? [luca020400]

* vendor/firmware
8653e9f mata: Import from lineage-18.1 [Nolen Johnson]
6bc6989 cheryl: Import from lineage-18.1 [Nolen Johnson]
3084485 aura: Import from lineage-18.1 [Nolen Johnson]
ef02c4a PL2: Import from lineage-18.1 [Nolen Johnson]

* vendor/gms
a084fce tools: Use double brackets [Arian]
288151b update_PixelSetupWizardStringsOverlay: Dynamically get the strings to replace [Arian]
a9afcab Update PixelSetupWizardStringsOverlay after extracting proprietary files [Arian]
1719e32 Update from oriole SP2A.220405.004 [Arian]

* vendor/xiaomi
c5f4f3d4 msm8998-common: libshims: Add shim for camera blobs [Erfan Abdi]
cc330411 msm8998-common: Unbreak peripheral manager [Bruno Martins]
7ce7488a msm8998-common: Automatically add apk/jar/vintf fragments to PRODUCT_PACKAGES [Michael Bestas]

====================
     2022-04-19    
====================
* device/qcom/sepolicy-legacy-um
a7822ada sepolicy-legacy-um: poweroffalarm_app: Add power off alarm app [Mao Jinlong]
5b46e54e legacy: vendor: Allow location to read wifi_hal_prop [Nolen Johnson]
31edd788 sdm660: Remove overly broad init rule [Michael Bestas]
23ede551 sdm660: Remove duplicate init rule [Michael Bestas]
9ffbcb4c Label persist.vendor.bluetooth. properties [Michael Bestas]
77f4c831 Revert "sepolicy: label persist.vendor.bluetooth.a4wp" [Michael Bestas]
ddf1fab9 sepolicy: legacy: qva: Allow cnd to read wifi_hal_prop [Arian]
961d737b Sepolicy: add define for lksecapp [Arthur Shuai]
9589ed82 Allow vendor_init set vendor_time_service_prop [Michael Bestas]
2170d77a sdm660: Label sysfs_uio_file [Michael Bestas]
7b177661 sdm660: Label sysfs_ssr_toggle [Michael Bestas]
709f9f65 Label persist/rfs recursively [Chirayu Desai]
e5458dfe common: Fix sysfs_socinfo Label for sensors [Max Weffers]
37a36ee0 common: Label persist.vendor.camera.debug.logfile [Michael Bestas]
2bccd127 sdm660: Generate contexts for rtc [Aayush Gupta]
fcde3370 sepolicy: setting secontext to rtc node [Mohit Aggarwal]
a870b256 sepolicy: Add rw permission for i2c touch sys node [Amit P Choudhari]
2e5d4f5b Use set_prop() macro for property sets [Michael Bestas]
5f259f40 sepolicy: Switch to BOARD_VENDOR_SEPOLICY_DIRS [Aayush Gupta]
b59bea96 fixup! sepolicy: Remove rules for non legacy platforms [Michael Bestas]
4e5afc67 fixup! qcom: Label vendor files with (vendor|system/vendor) instead of vendor [Michael Bestas]

* external/chromium-webview
0f78a8f Update arm{,64} and x86 Chromium Webview to 100.0.4896.127 [Kevin F. Haggerty]

* kernel/xiaomi/msm8998
aaf94607d52f bpf: fix missing header inclusion [Zi Shen Lim]
c74db0a426c5 UPSTREAM: security: selinux: allow per-file labeling for bpffs [Connor O'Brien]
8e649e002117 BACKPORT: ANDROID: Remove xt_qtaguid module from new kernels. [Chenbo Feng]
afd77913f88b wireguard: compat: udp_tunnel: Account for kernel 4.4 BPF backport [Bruno Martins]
e1efec194166 selinux: distinguish non-init user namespace capability checks [Stephen Smalley]
3139e1053fc9 selinux: check ss_initialized before revalidating an inode label [Paul Moore]
86720e523c73 selinux: delay inode label lookup as long as possible [Paul Moore]
7e70da37dcc9 selinux: don't revalidate an inode's label when explicitly setting it [Paul Moore]
f41375dfdccf selinux: simply inode label states to INVALID and INITIALIZED [Paul Moore]
07b510cbe286 gfs2: Invalid security labels of inodes when they go invalid [Andreas Gruenbacher]
cf0d42043fc6 selinux: Inode label revalidation performance fix [Andreas Gruenbacher]
99496f4811f5 selinux: Revalidate invalid inode security labels [Andreas Gruenbacher]
0619b8efce13 security: Add hook to invalidate inode security labels [Andreas Gruenbacher]
db0ce4ad3621 selinux: Add accessor functions for inode->i_security [Andreas Gruenbacher]
5fec55e3dfb0 security: Make inode argument of inode_getsecid non-const [Andreas Gruenbacher]
cdd6e5ac4e93 security: Make inode argument of inode_getsecurity non-const [Andreas Gruenbacher]
6d6db4fc001f selinux: Remove unused variable in selinux_inode_init_security [Andreas Gruenbacher]
c4c77c3c0e4b arm64: bpf: optimize LD_ABS, LD_IND [Zi Shen Lim]
e5d46ad659ea arm64: bpf: optimize JMP_CALL [Zi Shen Lim]
9fcb3c3c1b2d ANDROID: arm64: bpf: implement arch_bpf_jit_check_func [Sami Tolvanen]
4e2737a8b6c7 bpf, arm64: fix out of bounds access in tail call [Daniel Borkmann]
12c9e8141f8a bpf, arm64: fix faulty emission of map access in tail calls [Daniel Borkmann]
402d666e2c1a BACKPORT: Add support for BPF_FUNC_probe_read_str [Joel Fernandes]
fc1c9bcecd40 bpf: Fix un-initialized variable in bpf_trace_printk [Jayant Chowdhary]
2b50881dac23 bpf: fix bpf_trace_printk on 32 bit archs [Daniel Borkmann]
b56efca08920 FROMLIST: Remove the redundant skb->dev initialization in ip6_fragment [Chenbo Feng]
6e3845998250 FROMLIST: bpf: Remove duplicate tcp_filter hook in ipv6 [Chenbo Feng]
8dba22656a2a FROMLIST: ipv6: Initial skb->dev and skb->protocol in ip6_output [Chenbo Feng]
8bd67d650d32 FROMLIST: bpf: cgroup skb progs cannot access ld_abs/ind [Daniel Borkmann]
af5b89865ab9 bpf: Remove recursion prevention from rcu free callback [Thomas Gleixner]
1f459d731993 ANDROID: bpf: validate bpf_func when BPF_JIT is enabled with CFI [Sami Tolvanen]
c6da67a69b16 net: ipv4, ipv6: run cgroup eBPF egress programs [Daniel Mack]
d44772d02041 bpf: add XDP_TX xdp_action for direct forwarding [Brenden Blanco]
68c4031dca3c bpf: Add kconfig knob for disabling unpriv bpf by default [Daniel Borkmann]
279032497473 bpf: Check for integer overflow when using roundup_pow_of_two() [Bui Quang Minh]
e6c4b4b97e4c bpf: Fix integer overflow in prealloc_elems_and_freelist() [Tatsuhiko Yasumatsu]
f153a4358cef UPSTREAM: bpf: bpf_prog_array_alloc() should return a generic non-rcu pointer [Roman Gushchin]
f10e982d3b2e bpf: Prevent increasing bpf_jit_limit above max [Lorenz Bauer]
bfe07625dede UPSTREAM: bpf: fix rcu annotations in compute_effective_progs() [Roman Gushchin]
7679bac78e33 bpf: reject wrong sized filters earlier [Daniel Borkmann]
94fb8cbb7306 soreuseport: Prep for fast reuseport TCP socket selection [Craig Gallek]
f4b390557584 FROMGIT: bpf: Do not change gso_size during bpf_skb_change_proto() [Maciej Å»enczykowski]
1e6a46707234 UPSTREAM: bpf: restore skb->sk before pskb_trim() call [Eric Dumazet]
ae1bab40b111 BACKPORT: net: dev_is_mac_header_xmit() true for ARPHRD_RAWIP [Maciej Å»enczykowski]
190a838d3efd bpf: add bpf_clone_redirect to bpf_helper_changes_pkt_data [Daniel Borkmann]
7c035c5e26a7 bpf: Fix bpf_redirect to an ipip/ip6tnl dev [Martin KaFai Lau]
73ae9db64e85 bpf: Remove MTU check in __bpf_skb_max_len [Jesper Dangaard Brouer]
a80aca14a33e UPSTREAM: net: filter: run cgroup eBPF ingress programs [Daniel Mack]
8ef7935342ee cgroup: Add task_under_cgroup_hierarchy cgroup inline function to headers [Sargun Dhillon]
69a91e6165ee bpf: use skb_to_full_sk helper in bpf_skb_under_cgroup [Daniel Borkmann]
997b40bc5c5a bpf, events: fix offset in skb copy handler [Daniel Borkmann]
c3e6fac2b900 perf, events: add non-linear data support for raw records [Daniel Borkmann]
be326ad58cc8 bpf: use bpf_get_smp_processor_id_proto instead of raw one [Daniel Borkmann]
96faaeaafcac net/compat: Add missing sock updates for SCM_RIGHTS [Kees Cook]
da703ef5130b bpf: Constify bpf_verifier_ops structure [Julia Lawall]
d07f0b4132a0 bpf, trace: fetch current cpu only once [Daniel Borkmann]
fc6c6256bb10 bpf, trace: add BPF_F_CURRENT_CPU flag for bpf_perf_event_read [Daniel Borkmann]
73a23d04435e FROMLIST: [net-next,v2,1/2] bpf: Allow CGROUP_SKB eBPF program to access sk_buff [Chenbo Feng]
8604eec97967 BACKPORT [FROMLIST] New getsockopt option to get socket cookie [Chenbo Feng]
1a759ab3516b perf, bpf: fix conditional call to bpf_overflow_handler [Arnd Bergmann]
290f63d0da22 kernel: Nuke void *priv from cpuset_fork [Maitreya29]
64b13eb76e2a net, sysctl: Fix compiler warning when only cBPF is present [Alexander Lobakin]
ae9449f65682 Revert "net/compat: Add missing sock updates for SCM_RIGHTS" [Maitreya29]
8c07f6507022 bpf: fix bpf_jit_limit knob for PAGE_SIZE >= 64K [Daniel Borkmann]
21abfd815324 Revert "cgroup: Disable IRQs while holding css_set_lock" [Anay Wadhera]
26a3e01de61c cgroup: Add generic cgroup subsystem permission checks [Colin Cross]
55ab7be4f799 cgroup: refactor allow_attach function into common code [Rom Lemarchand]
a2b6897af5af bpf: Fix buggy rsh min/max bounds tracking [Daniel Borkmann]
b0d7bc01c2ad cgroup: add tracepoints for basic operations [Tejun Heo]
afdbf72a75ea cgroup: Disable IRQs while holding css_set_lock [Daniel Bristot de Oliveira]
8be9674bf85c FROMLIST: kernel: cgroup: add poll file operation [Johannes Weiner]
689be33ae1a6 UPSTREAM: cgroup add cftype->open/release() callbacks [Tejun Heo]
b0bd6e78068a netprio_cgroup: Fix unlimited memory leak of v2 cgroups [Zefan Li]
efac1c94383c cgroup: memcg: net: do not associate sock with unrelated cgroup [Shakeel Butt]
64599b136283 cgroup: add missing skcd->no_refcnt check in cgroup_sk_clone() [Yang Yingliang]
8466ed4fdaac cgroup: fix cgroup_sk_alloc() for sk_clone_lock() [Cong Wang]
1710f4649171 BACKPORT: UPSTREAM: Add a eBPF helper function to retrieve socket uid [Chenbo Feng]
7b8bf634ea1a BACKPORT: UPSTREAM: Add a helper function to get socket cookie in eBPF [Chenbo Feng]
fcca68dd4382 ANDROID: Fix missing uapi headers [Chenbo Feng]
a21831767092 bpf: add helper to invalidate hash [Daniel Borkmann]
dcfb4feb709d net: take compile fix from 4.9 [Anay Wadhera]
01f9280f931a cgroup: replace out_idr_free with actual code [Anay Wadhera]
340293f93556 ip_tunnel: add support for setting flow label via collect metadata [Daniel Borkmann]
86c651d631b8 net: simplify and make pkt_type_ok() available for other users [Jamal Hadi Salim]
7c2ad1220f8f kernfs: define kernfs_node_dentry [Aditya Kali]
483cbe97b0e4 BACKPORT: cgroup: misc changes [Tejun Heo]
01974b4687bb objtool, modules: Discard objtool annotation sections for modules [Josh Poimboeuf]
80d9285dc2d0 objtool: Add STACK_FRAME_NON_STANDARD() macro [Josh Poimboeuf]
912f78ee8b0c remove leftovers from 6ea07b4590d3174a53303 [Anay Wadhera]
0338cb47c1dd fs: Add user namespace member to struct super_block [Eric W. Biederman]
a3b31e9a916a vfs: Pass data, ns, and ns->userns to mount_ns [Eric W. Biederman]
4314aa40f48a kernfs: make kernfs_path*() behave in the style of strlcpy() [Tejun Heo]
2ca94206ebd4 kernfs_path_from_node_locked: don't overwrite nlen [Serge Hallyn]
ae72d2cb0a67 arm64: bpf_jit_comp: drop artifact [Anay Wadhera]
3db01ce9d318 UPSTREAM: cgroup: move CONFIG_SOCK_CGROUP_DATA to init/Kconfig [Arnd Bergmann]
6126fdfff4b8 UPSTREAM: cgroup: Fix CGROUP_BPF config [Andy Lutomirski]
a85b6c28bb28 BACKPORT: bpf: permit multiple bpf attachments for a single perf event [Yonghong Song]
3f79f14b6220 perf, bpf: minimize the size of perf_trace_() tracepoint handler [Alexei Starovoitov]
9d74f999359b UPSTREAM: bpf: use the same condition in perf event set/free bpf handler [Yonghong Song]
8e99edf71c2d BACKPORT: bpf: multi program support for cgroup+bpf [Alexei Starovoitov]
dc85f706114c bpf: add bpf_jit_limit knob to restrict unpriv allocations [Daniel Borkmann]
f5ca8c9e8bbc bpf: restrict access to core bpf sysctls [Daniel Borkmann]
0b60d6d0eab4 bpf: get rid of pure_initcall dependency to enable jits [Daniel Borkmann]
a3130be14101 arm64: bpf: implement bpf_tail_call() helper [Zi Shen Lim]
f2ff2852cf78 bpf: arm64: remove callee-save registers use for tmp registers [Yang Shi]
b63b623cb9de bpf, arm64: add support for constant blinding [Daniel Borkmann]
67a0053b6d35 arm64: bpf: add extra pass to handle faulty codegen [Zi Shen Lim]
a3ad689ea403 bpf: silence warning messages in core [Valdis KlÄtnieks]
64d6e2e3b447 UPSTREAM: bpf: relax inode permission check for retrieving bpf program [Chenbo Feng]
51086b442410 bpf: convert htab map to hlist_nulls [Alexei Starovoitov]
4b64d2b748de bpf: fix struct htab_elem layout [Alexei Starovoitov]
01be844fcf75 bpf: check pending signals while verifying programs [Alexei Starovoitov]
36d8a3628f4f bpf: Prevent memory disambiguation attack [Alexei Starovoitov]
8d9e005f1375 bpf/verifier: Pass instruction index to check_mem_access() and check_xadd() [Ben Hutchings]
2e201a9af129 bpf/verifier: Add spi variable to check_stack_write() [Ben Hutchings]
61ca638c1dfe bpf: fix references to free_bpf_prog_info() in comments [Jakub Kicinski]
57aab2d68727 bpf: map_get_next_key to return first key on NULL [Teng Qin]
dae4afe695a1 bpf: skip unnecessary capability check [Chenbo Feng]
b10f71bc3105 BACKPORT: fix "netfilter: xt_bpf: Fix XT_BPF_MODE_FD_PINNED mode of 'xt_bpf_info_v1'" [Al Viro]
4ffdc4f9405e UPSTREAM: netfilter: xt_bpf: add overflow checks [Jann Horn]
875d062678ae UPSTREAM: netfilter: xt_bpf: Fix XT_BPF_MODE_FD_PINNED mode of 'xt_bpf_info_v1' [Shmulik Ladkani]
d6709b1f55f3 UPSTREAM: netfilter: xt_bpf: support ebpf [Willem de Bruijn]
ab653ea5031f perf, bpf: add perf events core support for BPF_PROG_TYPE_PERF_EVENT programs [Alexei Starovoitov]
5434dca0dbda perf/core: Set event's default ::overflow_handler() [Wang Nan]
bf6c8c4cd830 bpf: add schedule points in percpu arrays management [Eric Dumazet]
4c0842eaa41d bpf: fix mlock precharge on arraymaps [Daniel Borkmann]
e40b6220c27a bpf: fix wrong exposure of map_flags into fdinfo for lpm [Daniel Borkmann]
3d81a0680884 bpf: fix function type for __bpf_prog_run [Sami Tolvanen]
94c369583ac3 bpf: reject stores into ctx via st and xadd [Daniel Borkmann]
a921e0fa5ec0 bpf: fix 32-bit divide by zero [Alexei Starovoitov]
0d9c494ce097 bpf: fix divides by zero [Eric Dumazet]
27ccd8a0afe3 bpf: arsh is not supported in 32 bit alu thus reject it [Daniel Borkmann]
6568af0c1e4d bpf: introduce BPF_JIT_ALWAYS_ON config [Alexei Starovoitov]
abf40f885b9e bpf: fix bpf_tail_call() x64 JIT [Alexei Starovoitov]
534dacc01676 bpf, array: fix overflow in max_entries and undefined behavior in index_mask [Daniel Borkmann]
2a2f943d0243 bpf: prevent out-of-bounds speculation [Alexei Starovoitov]
dcb2c67f72db bpf: refactor fixup_bpf_calls() [Alexei Starovoitov]
39910b98c639 bpf: move fixup_bpf_calls() function [Alexei Starovoitov]
9dec46f1b30e bpf/verifier: Fix states_equal() comparison of pointer and UNKNOWN [Ben Hutchings]
331501cd097b bpf: fix incorrect sign extension in check_alu_op() [Jann Horn]
93188ebdf304 bpf: reject out-of-bounds stack pointer calculation [Jann Horn]
4c5e87a5de85 bpf: fix branch pruning logic [Alexei Starovoitov]
c60a218c818a bpf: adjust insn_aux_data when patching insns [Alexei Starovoitov]
5e83bdee0398 bpf: fix lockdep splat [Eric Dumazet]
aa9eba07a784 UPSTREAM: selinux: bpf: Add addtional check for bpf object file receive [Chenbo Feng]
5dd97a8acaf4 UPSTREAM: selinux: bpf: Add selinux check for eBPF syscall operations [Chenbo Feng]
6d6e905c034a BACKPORT: security: bpf: Add LSM hooks for bpf object related syscall [Chenbo Feng]
eae207dc0ff6 BACKPORT: bpf: Add file mode configuration into bpf maps [Chenbo Feng]
3b67371b712b bpf: move bpf_map_show_fdinfo to match upstream location [Anay Wadhera]
ca563aa11a35 bpf/verifier: reject BPF_ALU64|BPF_END [Edward Cree]
d2c1edd9de93 bpf/verifier: fix min/max handling in BPF_SUB [Edward Cree]
f717a7b2a9c3 bpf: fix mixed signed/unsigned derived min/max value bounds [Daniel Borkmann]
873971799139 bpf, verifier: fix alu ops against map_value{, _adj} register types [Daniel Borkmann]
6957eb5de51e bpf: adjust verifier heuristics [Daniel Borkmann]
03d51fb16206 bpf, verifier: add additional patterns to evaluate_reg_imm_alu [John Fastabend]
6b87734396f0 bpf: prevent leaking pointer via xadd on unpriviledged [Daniel Borkmann]
6e5860e46b48 bpf: don't trigger OOM killer under pressure with map alloc [Daniel Borkmann]
2d18534cf9e5 FROMLIST: bpf: cgroup skb progs cannot access ld_abs/ind [Daniel Borkmann]
0d559c9e9f1b FROMLIST: [net-next,v2,2/2] bpf: Remove the capability check for cgroup skb eBPF program [Chenbo Feng]
b5be810c12a1 FROMLIST: [net-next,v2,1/2] bpf: Allow CGROUP_SKB eBPF program to access sk_buff [Chenbo Feng]
c90c9a2ac769 UPSTREAM: bpf: cgroup: fix documentation of __cgroup_bpf_update() [Daniel Mack]
f67c0d994a42 BACKPORT: bpf: introduce BPF_F_ALLOW_OVERRIDE flag [Alexei Starovoitov]
7f6453136b0d UPSTREAM: samples: bpf: add userspace example for attaching eBPF programs to cgroups [Daniel Mack]
c8e7f1683892 UPSTREAM: bpf: add new prog type for cgroup socket filtering [Daniel Mack]
92f7609bdf5f BACKPORT: UPSTREAM: bpf: pass sk to helper functions [Willem de Bruijn]
cbb19ce2324a UPSTREAM: bpf: add BPF_PROG_ATTACH and BPF_PROG_DETACH commands [Daniel Mack]
8de2dd69e0de kernfs: implement kernfs_walk_and_get() [Tejun Heo]
0fda01db8b25 BACKPORT: fs: kernfs: add poll file operation [Johannes Weiner]
4dc7c37c789e UPSTREAM: kernfs: add kernfs_ops->open/release() callbacks [Tejun Heo]
d15f8654cf1c kernfs: Add API to generate relative kernfs path [Aditya Kali]
de66fe2e2211 sched: new clone flag CLONE_NEWCGROUP for cgroup namespace [Aditya Kali]
b6b7346069a3 UPSTREAM: cgroup: add support for eBPF programs [Daniel Mack]
0a346079605c cgroup: don't online subsystems before cgroup_name/path() are operational [Tejun Heo]
ad91dc20ab6a cgroup: fix error handling regressions in proc_cgroup_show() and cgroup_release_agent() [Tejun Heo]
b4bb24aeda54 cgroup: fix invalid controller enable rejections with cgroup namespace [Tejun Heo]
6c69e3aa5f24 kernel: add a helper to get an owning user namespace for a namespace [Andrey Vagin]
25ef12806840 fs: Limit file caps to the user namespace of the super block [Seth Forshee]
74d16621d49d cgroup: duplicate cgroup reference when cloning sockets [Johannes Weiner]
44635c8089a8 cgroup: make cgroup_path() and friends behave in the style of strlcpy() [Tejun Heo]
b0e4c4db1842 cgroupns: Only allow creation of hierarchies in the initial cgroup namespace [Eric W. Biederman]
1ae35060f4d2 cgroupns: Fix the locking in copy_cgroup_ns [Eric W. Biederman]
1287b8c676e1 cgroup: Add cgroup_get_from_fd [Martin KaFai Lau]
f039bb0eae49 cgroup: allow NULL return from ss->css_alloc() [Tejun Heo]
c091fc3cb816 cgroup: remove unnecessary 0 check from css_from_id() [Johannes Weiner]
bb21941ae247 cgroup: fix idr leak for the first cgroup root [Johannes Weiner]
b9c37d3d1e01 cgroup: remove redundant cleanup in css_create [Wenwei Tao]
18a0a15c4572 cgroup: fix compile warning [Felipe Balbi]
59e20db6750e cgroup, kernfs: make mountinfo show properly scoped path for cgroup namespaces [Serge E. Hallyn]
e7bc302979fc cgroup: implement cgroup_subsys->implicit_on_dfl [Tejun Heo]
eec76e8d7379 cgroup: use css_set->mg_dst_cgrp for the migration target cgroup [Tejun Heo]
50d67d95aaca cgroup: make cgroup[_taskset]_migrate() take cgroup_root instead of cgroup [Tejun Heo]
d3da2e1818ab cgroup: move migration destination verification out of cgroup_migrate_prepare_dst() [Tejun Heo]
b73ad13d7ea1 cgroup: fix incorrect destination cgroup in cgroup_update_dfl_csses() [Tejun Heo]
2486334d03dc cgroup: update css iteration in cgroup_update_dfl_csses() [Tejun Heo]
f0a1738a16fd cgroup: allocate 2x cgrp_cset_links when setting up a new root [Tejun Heo]
8f1e56d63f05 cgroup: make cgroup_calc_subtree_ss_mask() take @this_ss_mask [Tejun Heo]
b77fa7d76c77 cgroup: reimplement rebind_subsystems() using cgroup_apply_control() and friends [Tejun Heo]
1befa28ffdbf cgroup: use cgroup_apply_enable_control() in cgroup creation path [Tejun Heo]
3d068fba0fd2 cgroup: combine cgroup_mutex locking and offline css draining [Tejun Heo]
ca7b35a5a96a cgroup: factor out cgroup_{apply|finalize}_control() from cgroup_subtree_control_write() [Tejun Heo]
819ffe6d2005 cgroup: introduce cgroup_{save|propagate|restore}_control() [Tejun Heo]
193117b0c2aa cgroup: make cgroup_drain_offline() and cgroup_apply_control_{disable|enable}() recursive [Tejun Heo]
964ccb80314b cgroup: factor out cgroup_apply_control_enable() from cgroup_subtree_control_write() [Tejun Heo]
3707f9752514 cgroup: factor out cgroup_apply_control_disable() from cgroup_subtree_control_write() [Tejun Heo]
bb3797f35799 cgroup: factor out cgroup_drain_offline() from cgroup_subtree_control_write() [Tejun Heo]
e4c0b90270f0 cgroup: introduce cgroup_control() and cgroup_ss_mask() [Tejun Heo]
02ea5278d7c2 cgroup: factor out cgroup_create() out of cgroup_mkdir() [Tejun Heo]
319331fe671f cgroup: reorder operations in cgroup_mkdir() [Tejun Heo]
4241636e2fb0 cgroup: explicitly track whether a cgroup_subsys_state is visible to userland [Tejun Heo]
d1ef6eadeef2 cgroup: separate out interface file creation from css creation [Tejun Heo]
732ba579b536 cgroup: suppress spurious de-populated events [Tejun Heo]
3e88a756d001 cgroup: re-hash init_css_set after subsystems are initialized [Tejun Heo]
97d8ea8e7771 cgroup: reset css on destruction [Vladimir Davydov]
90c1aa475b3a cgroup: fix and restructure error handling in copy_cgroup_ns() [Tejun Heo]
06924aa5c1dd cgroup: fix a mistake in warning message [Xiubo Li]
c7f6c9c17122 cgroup: use ->subtree_control when testing no internal process rule [Tejun Heo]
abfb376960dc cgroup: make css_tryget_online_from_dir() also recognize cgroup2 fs [Tejun Heo]
20ffd1d0225f cgroup: s/cgrp_dfl_root_/cgrp_dfl_/ [Tejun Heo]
9e74c6149397 cgroup: make cgroup subsystem masks u16 [Tejun Heo]
7b66ea74a739 cgroup: use do_each_subsys_mask() where applicable [Tejun Heo]
3cf23fe298f0 cgroup: convert for_each_subsys_which() to do-while style [Tejun Heo]
5725a1b29354 cgroup: s/child_subsys_mask/subtree_ss_mask/ [Tejun Heo]
1d1a2cde48fc Revert "cgroup: add cgroup_subsys->css_e_css_changed()" [Tejun Heo]
ef1feb8e5a09 cgroup: fix error return value of cgroup_addrm_files() [Tejun Heo]
9362431dd68f cgroup: fix alloc_cgroup_ns() error handling in copy_cgroup_ns() [Tejun Heo]
4235f35d858d Add FS_USERNS_FLAG to cgroup fs [Serge Hallyn]
1a8324853337 cgroup: mount cgroupns-root when inside non-init cgroupns [Serge Hallyn]
2a297a519a3a cgroup: cgroup namespace setns support [Aditya Kali]
72ec3255d5d4 cgroup: introduce cgroup namespaces [Aditya Kali]
0c5f44c742d3 cgroup: provide cgroup_nov1= to disable controllers in v1 mounts [Johannes Weiner]
e970b4f4a6e2 cgroup: demote subsystem init messages to KERN_DEBUG [Tejun Heo]
a11747d3b837 cgroup: fix a typo. [Rami Rosen]
f8c9248ec327 net, cgroup: cgroup_sk_updat_lock was missing initializer [Tejun Heo]
dc325884390d sock, cgroup: add sock->sk_cgroup [Tejun Heo]
c19ee5707948 net: wrap sock->sk_cgrp_prioidx and ->sk_classid inside a struct [Tejun Heo]
401836253c76 netprio_cgroup: limit the maximum css->id to USHRT_MAX [Tejun Heo]
55b3b34cb39e cgroup: kill cgrp_ss_priv[CGROUP_CANFORK_COUNT] and friends [Oleg Nesterov]
3f3561ffd458 cgroup: implement cgroup_get_from_path() and expose cgroup_put() [Tejun Heo]
d34063c30fd6 cgroup: record ancestor IDs and reimplement cgroup_is_descendant() using it [Tejun Heo]
510a764231a7 bpf: don't let ldimm64 leak map addresses on unprivileged [Daniel Borkmann]
e935a6568e0e bpf: enhance verifier to understand stack pointer arithmetic [Yonghong Song]
2942b407cb32 bpf: improve verifier packet range checks [Alexei Starovoitov]
82ee5b153fa5 bpf: fix mark_reg_unknown_value for spilled regs on map value marking [Daniel Borkmann]
148279052454 bpf: fix regression on verifier pruning wrt map lookups [Daniel Borkmann]
374de4583305 bpf: fix state equivalence [Alexei Starovoitov]
3cabd8310f63 bpf: Detect identical PTR_TO_MAP_VALUE_OR_NULL registers [Thomas Graf]
26c8d31fd896 bpf: fix states equal logic for varlen access [Josef Bacik]
f7c164284703 bpf: fix range arithmetic for bpf map access [Josef Bacik]
81116e9c3f3b bpf: fix htab map destruction when extra reserve is in use [Daniel Borkmann]
7fafceffcf79 bpf: allow access into map value arrays [Josef Bacik]
f183248c58ff bpf: clean up put_cpu_var usage [Shaohua Li]
15d7a22b358f bpf: Set register type according to is_valid_access() [MickaÃ«l SalaÃ¼n]
fbef6962fc78 bpf: recognize 64bit immediate loads as consts [Jakub Kicinski]
eb716e539725 bpf: enable non-core use of the verfier [Jakub Kicinski]
6a08ae23fb10 bpf: expose internal verfier structures [Jakub Kicinski]
62156277c8ad bpf: don't (ab)use instructions to store state [Jakub Kicinski]
c49aac581f04 bpf: direct packet write and access for helpers for clsact progs [Daniel Borkmann]
46eab9e9b7b1 bpf, verifier: enforce larger zero range for pkt on overloading stack buffs [Daniel Borkmann]
c71e31cdaf72 bpf: add BPF_CALL_x macros for declaring helpers [Daniel Borkmann]
f7d8d3b831cb bpf: fix checksum for vlan push/pop helper [Daniel Borkmann]
de2ebb7583bd bpf: fix checksum fixups on bpf_skb_store_bytes [Daniel Borkmann]
fc71068d05bf bpf: also call skb_postpush_rcsum on xmit occasions [Daniel Borkmann]
e68e305a718b bpf: enforce recursion limit on redirects [Daniel Borkmann]
51cc52494706 bpf: add own ctx rewriter on ifindex for clsact progs [Daniel Borkmann]
4fd9231d11ea bpf, perf: split bpf_perf_event_output [Daniel Borkmann]
8b0bd6001fe3 bpf: add BPF_SIZEOF and BPF_FIELD_SIZEOF macros [Daniel Borkmann]
a71a0208f8be bpf: introduce BPF_PROG_TYPE_PERF_EVENT program type [Alexei Starovoitov]
80f736af8bd0 bpf: allow bpf_get_prandom_u32() to be used in tracing [Alexei Starovoitov]
eee2aa696486 bpf: minor cleanups in helpers [Daniel Borkmann]
d5010c4ff46b bpf: get rid of cgroup helper related ifdefs [Daniel Borkmann]
d7d56b9dc848 bpf: enable event output helper also for xdp types [Daniel Borkmann]
7a0f966b3bec bpf: add bpf_skb_change_tail helper [Daniel Borkmann]
0d35a9dd1aa0 bpf: use skb_pkt_type_ok helper in bpf_skb_change_type [Daniel Borkmann]
94486a4018bf bpf: fix write helpers with regards to non-linear parts [Daniel Borkmann]
31bc4ab87050 bpf: add test cases for direct packet access [Daniel Borkmann]
45741fd766d6 bpf: fix range propagation on direct packet access [Daniel Borkmann]
1784e157ac49 samples/bpf: add verifier tests for the helper access to the packet [Aaron Yue]
fb3f8fac0a11 samples/bpf: add verifier tests [Alexei Starovoitov]
93ee41ab3708 bpf, samples: add test cases for raw stack [Daniel Borkmann]
14fb42b5a504 samples/bpf: add map_flags to bpf loader [Alexei Starovoitov]
264bd51672f6 samples/bpf: unit test for BPF_MAP_TYPE_PERCPU_ARRAY [tom.leiming@gmail.com]
bba23d575b6f samples/bpf: make map creation more verbose [Alexei Starovoitov]
1c5ae0cb8d8f samples/bpf: unit test for BPF_MAP_TYPE_PERCPU_HASH [Martin KaFai Lau]
6fb2e7e6badd bpf: perf_event progs should only use preallocated maps [Alexei Starovoitov]
b103579f6a01 bpf: support 8-byte metafield access [Alexei Starovoitov]
54369560a245 bpf: allow helpers access the packet directly [Alexei Starovoitov]
be359f3244d4 bpf: fix bpf_skb_in_cgroup helper naming [Daniel Borkmann]
b1bc7f7d97bb cgroup: bpf: Add an example to do cgroup checking in BPF [Martin KaFai Lau]
a47f5e868e43 samples/bpf: add 'pointer to packet' tests [Alexei Starovoitov]
13c0c1c80974 samples/bpf: add tracepoint vs kprobe performance tests [Alexei Starovoitov]
24b5be775fbe samples/bpf: add map performance test [Alexei Starovoitov]
3ed83931a233 samples/bpf: add bpf map stress test [Alexei Starovoitov]
c14dbe71e5b6 bpf: Add bpf_current_task_under_cgroup helper [Sargun Dhillon]
7816b3995152 bpf: Add bpf_probe_write_user BPF helper to be called in tracers [Sargun Dhillon]
f76bd4696527 samples/bpf: offwaketime example [Alexei Starovoitov]
ccde46f2cb6b kernel/trace/bpf_trace.c: work around gcc-4.4.4 anon union initialization bug [Andrew Morton]
c80f66cc54b2 bpf: introduce bpf_get_current_task() helper [Alexei Starovoitov]
8dbaaca1649b bpf: add bpf_get_hash_recalc helper [Daniel Borkmann]
388c8f8d94fe bpf: restore behavior of bpf_map_update_elem [Alexei Starovoitov]
e86e5a0e118a bpf: fix method of PTR_TO_PACKET reg id generation [Jakub Kicinski]
7e9918962ead bpf: enable direct packet data write for xdp progs [Brenden Blanco]
ea8617a28d8e bpf: add XDP prog type for early driver filter [Brenden Blanco]
3b03a0c92238 bpf: wire in data and data_end for cls_act_bpf [Alexei Starovoitov]
84cbe200721a bpf: cleanup bpf_prog_run_{save,clear}_cb helpers [Daniel Borkmann]
6bff0d68d68f bpf: add bpf_prog_add api for bulk prog refcnt [Brenden Blanco]
7eca70725f8a bpf: bpf_event_entry_gen's alloc needs to be in atomic context [Daniel Borkmann]
a9873b071769 bpf: avoid stack copy and use skb ctx for event output [Daniel Borkmann]
1a85e07e59d9 bpf: make inode code explicitly non-modular [Paul Gortmaker]
12ca04ee1573 cgroup: bpf: Add bpf_skb_in_cgroup_proto [Martin KaFai Lau]
0a12e067b58a bpf: add bpf_skb_change_type helper [Daniel Borkmann]
728e86960b57 bpf: add bpf_skb_change_proto helper [Daniel Borkmann]
84a6ddb7cc7d cgroup: bpf: Add BPF_MAP_TYPE_CGROUP_ARRAY [Martin KaFai Lau]
a8b4c9b99c3e bpf: refactor bpf_prog_get and type check into helper [Daniel Borkmann]
c5ba36665247 bpf: generally move prog destruction to RCU deferral [Daniel Borkmann]
9e5ed83f1c17 bpf: don't use raw processor id in generic helper [Daniel Borkmann]
a2b2b7dd22bf bpf: minor cleanups on fd maps and helpers [Daniel Borkmann]
b4277a5013fc bpf, maps: flush own entries on perf map release [Daniel Borkmann]
4da150313904 bpf, maps: extend map_fd_get_ptr arguments [Daniel Borkmann]
bdcfb8d9a329 bpf, maps: add release callback [Daniel Borkmann]
58df94a330f5 bpf: fix matching of data/data_end in verifier [Alexei Starovoitov]
4721ee922cbc perf core: Per event callchain limit [Arnaldo Carvalho de Melo]
e0857fb93f9d bpf, inode: disallow userns mounts [Daniel Borkmann]
8921ee79acff bpf: teach verifier to recognize imm += ptr pattern [Alexei Starovoitov]
c1829863f55f bpf: support decreasing order in direct packet access [Alexei Starovoitov]
7e34e620d8ea bpf: Use mount_nodev not mount_ns to mount the bpf filesystem [Eric W. Biederman]
2627bc364215 bpf: rather use get_random_int for randomizations [Daniel Borkmann]
918b55bfd3cb perf core: Pass max stack as a perf_callchain_entry context [Arnaldo Carvalho de Melo]
335e6f723771 bpf: add generic constant blinding for use in jits [Daniel Borkmann]
fc8a66b74bd1 bpf: move bpf_jit_enable declaration [Daniel Borkmann]
c9ec65e0586d bpf, trace: use READ_ONCE for retrieving file ptr [Daniel Borkmann]
2d48473e968e bpf, trace: add BPF_F_CURRENT_CPU flag for bpf_perf_event_output [Daniel Borkmann]
192465896e92 bpf: avoid warning for wrong pointer cast [Arnd Bergmann]
d9d04ea88b41 bpf: prepare bpf_int_jit_compile/bpf_prog_select_runtime apis [Daniel Borkmann]
e472c005cd7d bpf: add bpf_patch_insn_single helper [Daniel Borkmann]
afd45676cb0b bpf: minor cleanups in ebpf code [Daniel Borkmann]
7bc109e280ef bpf: improve verifier state equivalence [Alexei Starovoitov]
dff8793e123b bpf: direct packet access [Alexei Starovoitov]
f122b803c3f5 bpf: cleanup verifier code [Alexei Starovoitov]
019e7ff28222 bpf: fix check_map_func_compatibility logic [Alexei Starovoitov]
42328c53dddc bpf: fix refcnt overflow [Alexei Starovoitov]
f4bdbecf075d perf core: Allow setting up max frame stack depth via sysctl [Arnaldo Carvalho de Melo]
f7e38e862fb6 perf: generalize perf_callchain [Alexei Starovoitov]
c16c3d51c500 bpf: fix double-fdput in replace_map_fd_with_map_ptr() [Jann Horn]
ad1638f493fc bpf: add event output helper for notifications/sampling/logging [Daniel Borkmann]
e86f2fb9e4df bpf: convert relevant helper args to ARG_PTR_TO_RAW_STACK [Daniel Borkmann]
bf234b28f3c9 bpf: make padding in bpf_tunnel_key explicit [Daniel Borkmann]
d7cb0ec47fc4 ip_tunnels, bpf: define IP_TUNNEL_OPTS_MAX and use it [Daniel Borkmann]
49d7a6877aeb bpf, dst: add and use dst_tclassid helper [Daniel Borkmann]
1c4f960f2e7c bpf: make skb->tc_classid also readable [Daniel Borkmann]
e8a3a06c6113 bpf: support flow label for bpf_skb_{set, get}_tunnel_key [Daniel Borkmann]
1dead2920077 bpf: support for access to tunnel options [Daniel Borkmann]
e19aca1c78f5 bpf: allow to propagate df in bpf_skb_set_tunnel_key [Daniel Borkmann]
9c4fec72ee1d bpf: make helper function protos static [Daniel Borkmann]
ce8b33a484f8 bpf: add flags to bpf_skb_store_bytes for clearing hash [Daniel Borkmann]
c18d2a0a102e bpf: allow bpf_csum_diff to feed bpf_l3_csum_replace as well [Daniel Borkmann]
bc3cb1ee2640 bpf: fix csum setting for bpf_set_tunnel_key [Daniel Borkmann]
2682f68f559b bpf: fix csum update in bpf_l4_csum_replace helper for udp [Daniel Borkmann]
d6b2448e0026 bpf: don't emit mov A,A on return [Daniel Borkmann]
b4af04db5d6d bpf: remove artificial bpf_skb_{load, store}_bytes buffer limitation [Daniel Borkmann]
1079540e56b5 bpf: add generic bpf_csum_diff helper [Daniel Borkmann]
fb8a9a7af92b tun: use socket locks for sk_{attach,detatch}_filter [Hannes Frederic Sowa]
5e952161d30c bpf, verifier: add ARG_PTR_TO_RAW_STACK type [Daniel Borkmann]
f3a168c63f10 bpf, verifier: add bpf_call_arg_meta for passing meta data [Daniel Borkmann]
5483a016e6d6 bpf/verifier: reject invalid LD_ABS | BPF_DW instruction [Alexei Starovoitov]
29ca8572685f bpf: simplify verifier register state assignments [Alexei Starovoitov]
5337e36330c3 bpf, verifier: further improve search pruning [Daniel Borkmann]
60e9dc17c5d0 bpf: sanitize bpf tracepoint access [Alexei Starovoitov]
1e128e8111f9 bpf: support bpf_get_stackid() and bpf_perf_event_output() in tracepoint programs [Alexei Starovoitov]
98cfc604842c bpf: register BPF_PROG_TYPE_TRACEPOINT program type [Alexei Starovoitov]
c31b29c9f8bc perf, bpf: allow bpf programs attach to tracepoints [Alexei Starovoitov]
538fc7a1e7a3 perf: split perf_trace_buf_prepare into alloc and update parts [Alexei Starovoitov]
dea3c5c4bc50 perf: remove unused __addr variable [Alexei Starovoitov]
00d46abc9186 bpf: reject invalid names right in ->lookup() [Al Viro]
74a0154ea398 bpf: add missing map_flags to bpf_map_show_fdinfo [Daniel Borkmann]
83c97e49018a bpf: avoid copying junk bytes in bpf_get_current_comm() [Alexei Starovoitov]
0477cab1b84f bpf: bpf_stackmap_copy depends on CONFIG_PERF_EVENTS [Alexei Starovoitov]
e3c32c274818 bpf: convert stackmap to pre-allocation [Alexei Starovoitov]
b19452c6e5c0 bpf: check for reserved flag bits in array and stack maps [Alexei Starovoitov]
a1f1100f019c bpf: pre-allocate hash map elements [Alexei Starovoitov]
15ef4e0e842d bpf: introduce percpu_freelist [Alexei Starovoitov]
7c2bea9e288a bpf: prevent kprobe+bpf deadlocks [Alexei Starovoitov]
5bb60e8db549 bpf: Mark __bpf_prog_run() stack frame as non-standard [Josh Poimboeuf]
034f206d0353 bpf: add new arg_type that allows for 0 sized stack buffer [Daniel Borkmann]
0d50c2bb6f2a bpf: introduce BPF_MAP_TYPE_STACK_TRACE [Alexei Starovoitov]
8154902909a7 bpf: support ipv6 for bpf_skb_{set,get}_tunnel_key [Daniel Borkmann]
605cd84140b6 bpf: export helper function flags and reject invalid ones [Daniel Borkmann]
6c7bddf73099 bpf: add skb_postpush_rcsum and fix dev_forward_skb occasions [Daniel Borkmann]
acc4e8388aad soreuseport: setsockopt SO_ATTACH_REUSEPORT_[CE]BPF [Craig Gallek]
6a594c47d152 soreuseport: fast reuseport UDP socket selection [Craig Gallek]
87093ebf65c2 soreuseport: define reuseport groups [Craig Gallek]
35f475c6aea1 bpf: fix misleading comment in bpf_convert_filter [Daniel Borkmann]
cb52b525e423 bpf: add bpf_skb_load_bytes helper [Daniel Borkmann]
e0834ff25b4d bpf: grab rcu read lock for bpf_percpu_hash_update [Sasha Levin]
6770f8403622 bpf: fix branch offset adjustment on backjumps after patching ctx expansion [Daniel Borkmann]
1111246a8df1 bpf: add lookup/update support for per-cpu hash and array maps [Alexei Starovoitov]
efa15aad1d2f bpf: introduce BPF_MAP_TYPE_PERCPU_ARRAY map [Alexei Starovoitov]
a57abb64c535 bpf: introduce BPF_MAP_TYPE_PERCPU_HASH map [Alexei Starovoitov]
7a8e98c6e338 perf/bpf: Convert perf_event_array to use struct file [Alexei Starovoitov]
e340286c920f net: bpf: reject invalid shifts [Rabin Vincent]
99ca4c863fad bpf: hash: use per-bucket spinlock [tom.leiming@gmail.com]
27182c89d1a2 bpf: hash: move select_bucket() out of htab's spinlock [tom.leiming@gmail.com]
c61bcc117ab3 bpf: hash: use atomic count [tom.leiming@gmail.com]
66011e671797 bpf: move clearing of A/X into classic to eBPF migration prologue [Daniel Borkmann]
08a487c81eb2 bpf, inode: allow for rename and link ops [Daniel Borkmann]
e3c98e375cde bpf: fix allocation warnings in bpf maps and integer overflow [Alexei Starovoitov]
7d697783d1d8 bpf, array: fix heap out-of-bounds access when updating elements [Daniel Borkmann]
65ec60f0b7c8 bpf: fix clearing on persistent program array maps [Daniel Borkmann]
8c55ad7b96e4 bpf: add show_fdinfo handler for maps [Daniel Borkmann]
4c60d1c4fe45 Revert "bpf: fix clearing on persistent program array maps" [Anay Wadhera]
d692db0fad2f Revert "bpf, array: fix heap out-of-bounds access when updating elements" [Anay Wadhera]
923e1be9b328 Revert "bpf: fix allocation warnings in bpf maps and integer overflow" [Anay Wadhera]
d84ee2be3555 Revert "net: bpf: reject invalid shifts" [Anay Wadhera]
8f106203481e Revert "bpf: fix branch offset adjustment on backjumps after patching ctx expansion" [Anay Wadhera]
24aab25813b2 Revert "bpf: avoid copying junk bytes in bpf_get_current_comm()" [Anay Wadhera]
0684d621c770 Revert "bpf/verifier: reject invalid LD_ABS | BPF_DW instruction" [Anay Wadhera]
252d80993837 Revert "bpf: fix double-fdput in replace_map_fd_with_map_ptr()" [Anay Wadhera]
82e0685e29ea Revert "bpf: fix refcnt overflow" [Anay Wadhera]
323182b631c3 Revert "bpf: fix check_map_func_compatibility logic" [Anay Wadhera]
cb3d90016fbe Revert "bpf: Use mount_nodev not mount_ns to mount the bpf filesystem" [Anay Wadhera]
205c12845c5d Revert "bpf, inode: disallow userns mounts" [Anay Wadhera]
327e59d570a3 Revert "bpf: prevent leaking pointer via xadd on unpriviledged" [Anay Wadhera]
efb21a8bffd3 Revert "bpf/verifier: reject BPF_ALU64|BPF_END" [Anay Wadhera]
341aa44f157c Revert "bpf: don't let ldimm64 leak map addresses on unprivileged" [Anay Wadhera]
2c63f6f80991 Revert "bpf: add bpf_patch_insn_single helper" [Anay Wadhera]
fa8efd4e5634 Revert "bpf: don't (ab)use instructions to store state" [Anay Wadhera]
4a5b59ae5f3f Revert "bpf: move fixup_bpf_calls() function" [Anay Wadhera]
bba7716bb525 Revert "bpf: refactor fixup_bpf_calls()" [Anay Wadhera]
0f8a8a5cee8e Revert "bpf: adjust insn_aux_data when patching insns" [Anay Wadhera]
fbd2037fcf5d Revert "bpf: prevent out-of-bounds speculation" [Anay Wadhera]
980add4490a1 Revert "bpf, array: fix overflow in max_entries and undefined behavior in index_mask" [Anay Wadhera]
f0233b20e681 Revert "bpf: fix branch pruning logic" [Anay Wadhera]
d93445ad89b2 Revert "bpf: fix bpf_tail_call() x64 JIT" [Anay Wadhera]
23e6e6ae2fe1 Revert "bpf: introduce BPF_JIT_ALWAYS_ON config" [Anay Wadhera]
58c5030c405c Revert "bpf: arsh is not supported in 32 bit alu thus reject it" [Anay Wadhera]
bae72d3c34f7 Revert "bpf: avoid false sharing of map refcount with max_entries" [Anay Wadhera]
8a34cd948236 Revert "bpf: fix divides by zero" [Anay Wadhera]
427c939d0def Revert "bpf: fix 32-bit divide by zero" [Anay Wadhera]
062efce09d3a Revert "bpf: reject stores into ctx via st and xadd" [Anay Wadhera]
14005dff302d Revert "bpf: fix incorrect sign extension in check_alu_op()" [Anay Wadhera]
a5f81e8c0e89 Revert "bpf: skip unnecessary capability check" [Anay Wadhera]
6e5270c40005 Revert "bpf: map_get_next_key to return first key on NULL" [Anay Wadhera]
084fb699df86 Revert "bpf: fix references to free_bpf_prog_info() in comments" [Anay Wadhera]
e45eb0f3226d Revert "bpf: generally move prog destruction to RCU deferral" [Anay Wadhera]
e10bf956c959 Revert "bpf: support 8-byte metafield access" [Anay Wadhera]
40086f156641 Revert "bpf/verifier: Add spi variable to check_stack_write()" [Anay Wadhera]
af30bb72b074 Revert "bpf/verifier: Pass instruction index to check_mem_access() and check_xadd()" [Anay Wadhera]
a2b3af0ff2eb Revert "bpf: Prevent memory disambiguation attack" [Anay Wadhera]
b5829ffaf76f Revert "bpf: silence warning messages in core" [Anay Wadhera]

* lineage/scripts
5cc4c2d build-webview: Update default webview to 100.0.4896.127 [Kevin F. Haggerty]
e2c47f1 pixel: Run regen-vendor before extracting [Chirayu Desai]
a8b11ec build-webview: Only try to am files with a .patch extension [Kevin F. Haggerty]

* packages/apps/Recorder
5f91a27 Improve high quality recorder [luca020400]
a9c599f Fix amplitude in high quality recorder [luca020400]
5ab9683 Fix high quality recorder [luca020400]

* vendor/lineage
8f67d055 Remove libbfqio [Han Wang]

====================
     2022-04-18    
====================
* device/lineage/sepolicy
2819ec7 atv: Update mediashell_app policy [Nolen Johnson]

* lineage/hudson
97bf93e Update Experimental targets [Nolen Johnson]

* lineage/mirror
be43ceb The full quail experience [Chirayu Desai]
f5fa0f0 Updated to 17-Apr-2022 23:03 UTC [Kevin F. Haggerty]

* lineage/wiki
5ddf403a wiki: Fix steps numbering and indentations in heimdall template [razorloves]

* packages/apps/DeskClock
fa6047db2 DeskClock: Remove compatibility to old APIs [Michael W]
23d7064d1 DeskClock: Material Me? No YOU! [Michael W]
a997c68c8 DeskClock: Remove legacy support [Michael W]
fa5bf24dd DeskClock: Fix left button display [Michael W]
8ac239324 DeskClock: Add FLAG_IMMUTABLE [Michael W]

* packages/apps/Recorder
540b471 Recorder: material you colors [2bllw8]
90ac7c1 Recorder: save in Music directory on older devices [2bllw8]
ed6f957 Recorder: play/pause animation for pause/resume button [2bllw8]
a69487e Recorder: set appropriate notification title [2bllw8]
f57c146 Recorder: move lastItemUri preference methods to PreferencesManager [2bllw8]
2433725 Recorder: improve file name selection logic [2bllw8]
335c199 Recorder: add recording elapsed time below the title [2bllw8]
0b5c423 Recorder: move preferences management to its own class [2bllw8]
fac9475 Recorder: refactor SoundRecorderService and status management [2bllw8]

* packages/inputmethods/LatinIME
37de94c8c LatinIME: Update emojis [George Zacharia]
c879b4dcf LatinIME: update follow system theme label [Timi RautamÃ¤ki]

* vendor/firmware
e8f33f2 exynos9610: Update splash screens to correct ones [Nolen Johnson]

* vendor/lineage
9c4fd99f config: Disable remote keyguard animation until it's fixed [LuK1337]

====================
     2022-04-17    
====================
* lineage/mirror
7775092 Updated to 17-Apr-2022 14:31 UTC [Kevin F. Haggerty]

* system/core
cecb11d0b fs_mgr: Don't assume partitions replaced by DSU are logical already [Tim Zimmermann]

* vendor/lineage
6d0a45fb Update default wallpaper [Nolen Johnson]

====================
     2022-04-16    
====================
* vendor/lineage
cd2d068c overlays: Use rounded corners in SystemUI [Danny Lin]

